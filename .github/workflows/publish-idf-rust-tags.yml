name: Publish IDF-Rust Tags

on:
  workflow_dispatch:
    inputs:
      rust-build-branch:
        description: "Branch of rust-build to use"
        required: true
        default: "main"
      toolchain-version:
        description: "Version of Rust toolchain"
        required: true
        default: "1.62.0.0"

jobs:
  esp-idf:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        board: ["esp32", "esp32s3", "esp32s3", "esp32c3", "all"]
        # esp-idf: ["master", "v4.4"]
        # Use only v4.4 as master is failing due to: https://github.com/esp-rs/esp-idf-sys/issues/99
        esp-idf: ["v4.4"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build - ${{ matrix.board }}_${{ matrix.esp-idf }}_${{ github.event.inputs.toolchain-version }} tag (v4.4)
        if: matrix.esp-idf == 'v4.4'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: idf-rust.Containerfile
          build-args: |
            XTENSA_TOOLCHAIN_VERSION=${{ github.event.inputs.toolchain-version }}
            ESP_IDF_VERSION=release/v4.4
            ESP_BOARD=${{ matrix.board }}
          tags: idf-rust:${{ matrix.board }}_${{ matrix.esp-idf }}_${{ github.event.inputs.toolchain-version }}
          push: false
      - name: Build - ${{ matrix.board }}_${{ matrix.esp-idf }}_${{ github.event.inputs.toolchain-version }} tag (master)
        if: matrix.esp-idf == 'master'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: idf-rust.Containerfile
          build-args: |
            XTENSA_TOOLCHAIN_VERSION=${{ github.event.inputs.toolchain-version }}
            ESP_IDF_VERSION=${{ matrix.esp-idf }}
            ESP_BOARD=${{ matrix.board }}
          tags: idf-rust:${{ matrix.board }}_${{ matrix.esp-idf }}_${{ github.event.inputs.toolchain-version }}
          push: false
      - name: Build template project using generated tag (master)
        if: matrix.esp-idf == 'master' && matrix.board != 'all'
        uses: addnab/docker-run-action@v3
        with:
          image: idf-rust:${{ matrix.board }}_${{ matrix.esp-idf }}_${{ github.event.inputs.toolchain-version }}
          options: -u esp
          shell: bash
          run: |
            source /home/esp/export-esp.sh
            cargo generate --git https://github.com/esp-rs/esp-idf-template --branch fix/remove-toolchain-question cargo --name test-${{ matrix.board }} --vcs none --silent -d mcu=${{ matrix.board }} -d std=true -d espidfver=mainline -d devcontainer=false
            cd test-${{ matrix.board }}
            cargo build
      - name: Build template project using generated tag (release/v4.4)
        if: matrix.esp-idf == 'v4.4' && matrix.board != 'all'
        uses: addnab/docker-run-action@v3
        with:
          image: idf-rust:${{ matrix.board }}_${{ matrix.esp-idf }}_${{ github.event.inputs.toolchain-version }}
          options: -u esp
          shell: bash
          run: |
            source /home/esp/export-esp.sh
            cat /home/esp/export-esp.sh
            cargo generate --git https://github.com/esp-rs/esp-idf-template --branch fix/remove-toolchain-question cargo --name test-${{ matrix.board }} --vcs none --silent -d mcu=${{ matrix.board }} -d std=true -d espidfver=v4.4 -d devcontainer=false
            cd test-${{ matrix.board }}
            cargo build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build - ${{ matrix.board }}_${{ matrix.esp-idf }}_${{ github.event.inputs.toolchain-version }} tag
        uses: docker/build-push-action@v2
        with:
          context: .
          file: idf-rust.Containerfile
          build-args: |
            XTENSA_TOOLCHAIN_VERSION=${{ github.event.inputs.toolchain-version }}
            ESP_IDF_VERSION=${{ matrix.esp-idf }}
            ESP_BOARD=${{ matrix.board }}
          tags: espressif/idf-rust:${{ matrix.board }}_${{ matrix.esp-idf }}_${{ github.event.inputs.toolchain-version }}
          push: true
          platforms: linux/amd64, linux/arm64
  bare-metal:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        board: ["esp32", "esp32s2", "esp32s3", "esp32c3", "all"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build - ${{ matrix.board }}_${{ github.event.inputs.toolchain-version }} tag
        uses: docker/build-push-action@v2
        with:
          context: .
          file: idf-rust.Containerfile
          build-args: |
            XTENSA_TOOLCHAIN_VERSION=${{ github.event.inputs.toolchain-version }}
            ESP_BOARD=${{ matrix.board }}
          tags: idf-rust:${{ matrix.board }}_${{ github.event.inputs.toolchain-version }}
          push: false
      - name: Build template project using generated tag
        if: matrix.board != 'all'
        uses: addnab/docker-run-action@v3
        with:
          image: idf-rust:${{ matrix.board }}_${{ github.event.inputs.toolchain-version }}
          options: -u esp
          shell: bash
          run: |
            source /home/esp/export-esp.sh
            cat /home/esp/export-esp.sh
            cargo generate --git https://github.com/esp-rs/esp-template --name test-${{ matrix.board }} --vcs none --silent -d mcu=${{ matrix.board }} -d devcontainer=false
            cd test-${{ matrix.board }}
            cargo build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build - ${{ matrix.board }}_${{ github.event.inputs.toolchain-version }} tag
        uses: docker/build-push-action@v2
        with:
          context: .
          file: idf-rust.Containerfile
          build-args: |
            XTENSA_TOOLCHAIN_VERSION=${{ github.event.inputs.toolchain-version }}
            ESP_BOARD=${{ matrix.board }}
          tags: espressif/idf-rust:${{ matrix.board }}_${{ github.event.inputs.toolchain-version }}
          platforms: linux/amd64, linux/arm64
